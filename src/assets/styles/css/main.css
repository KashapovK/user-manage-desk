@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Убирает серую подсветку при тапе на мобильных устройствах (iOS/Android)
 */
button {
  -webkit-tap-highlight-color: transparent;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill='none'], [fill^='url'])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke='none'], [stroke^='url'])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: 'Manrope';
  src: url('../../fonts/Manrope-Medium.woff2') format('woff2');
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: 'Manrope';
  src: url('../../fonts/Manrope-SemiBold.woff2') format('woff2');
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
:root {
  --color-1: #161616;
  --color-2: #595959;
  --color-3: #9c9c9c;
  --color-4: #dadada;
  --color-5: #f4f4f4;
  --color-6: #fdfdfd;
  --color-accent: #22a0bc;
  --font-family-base: 'Manrope', sans-serif;
  --container-large-width: 72.5rem;
  --container-width: 22.5rem;
  --container-height: 10.5rem;
  --container-padding-x: 1rem;
  --transition-duration: 0.2s;
  --border: 0.0625rem solid var(--color-4);
  --100vw: calc(100vw - var(--scrollbar-width));
}
@media (width <= 23.49875rem) {
  :root {
    --container-large-width: 21.4375rem;
    --container-width: 10.125rem;
    --container-height: 15.125rem;
  }
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 23.49875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 23.49875rem) {
  .visible-mobile {
    display: none !important;
  }
}

.full-vw-line {
  position: relative;
}
.full-vw-line::before,
.full-vw-line::after {
  position: absolute;
  width: calc((var(--100vw) - var(--container-width)) / 2);
  height: 0.0625rem;
  background-color: var(--color-3);
}
.full-vw-line--top::before {
  content: '';
  bottom: 100%;
}
.full-vw-line--bottom::after {
  content: '';
  top: 100%;
}
.full-vw-line--left::before,
.full-vw-line--left::after {
  right: 100%;
}
.full-vw-line--right::before,
.full-vw-line--right::after {
  left: 100%;
}

.circle-icon {
  --circleSize: 3.25rem;
  --circleMarginLeft: 1.25rem;
  position: relative;
  min-height: var(--circleSize);
  padding-right: calc(var(--circleSize) + var(--circleMarginLeft));
}
@media (width <= 23.49875rem) {
  .circle-icon {
    --circleSize: 2.5rem;
  }
}
.circle-icon::after {
  width: var(--circleSize);
  height: var(--circleSize);
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  content: '';
  right: 0;
  background: url('../../icons/arrow-top-right_black.svg') center no-repeat
    var(--color-accent);
  border-radius: 50%;
}

body {
  font-size: clamp(1rem, 0.9559859155rem + 0.1877934272vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  color: var(--color-1);
  background-color: var(--color-4);
}

main {
  flex: 1;
}

h1,
.h1,
h2,
.h2,
h3,
.h3 {
  font-family: var(--font-family-base);
  font-weight: 600;
  color: var(--color-1);
}

h1,
.h1,
h2,
.h2 {
  font-size: clamp(1.5rem, 1.5rem + 0vw, 1.5rem);
}

h3,
.h3 {
  font-size: clamp(1.125rem, 1.0809859155rem + 0.1877934272vw, 1.25rem);
  color: var(--color-accent);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

:focus-visible {
  outline: 0.125rem dashed var(--color-accent);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.spinner__wrapper {
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  align-items: center;
}

.spinner {
  display: inline-block;
  width: 70px;
  height: 70px;
}

.spinner:after {
  content: '';
  display: block;
  width: 56px;
  height: 56px;
  margin: 6px;
  border-radius: 50%;
  border: 4px solid;
  border-color: black transparent black transparent;
  animation: spin 1s linear infinite;
} /*# sourceMappingURL=main.css.map */
